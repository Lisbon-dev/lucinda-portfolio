---
export interface Props {
  class?: string;
}

const {
  class: className = '',
} = Astro.props;

const headerClasses = [
  'header-container',
  className
].filter(Boolean).join(' ');
---

<div class={headerClasses}>
  <!-- Minimalist MENU button (top-right fixed) -->
  <button 
    class="menu-button nav-text interactive-element" 
    type="button"
    aria-label="Toggle navigation menu"
    aria-expanded="false"
    aria-controls="slide-header"
  >
    MENU
  </button>

  <!-- Slide-down header -->
  <header class="slide-header" id="slide-header" aria-hidden="true">
    <nav class="slide-nav" role="navigation" aria-label="Main navigation">
      <button 
        class="nav-button about-button"
        type="button"
        aria-label="Open about information"
      >
        About
      </button>
      <a 
        href="/projects"
        class="nav-button work-button"
        aria-label="View work and projects"
      >
        Work
      </a>
    </nav>
  </header>

  <!-- About Modal -->
  <div class="about-modal-overlay" aria-hidden="true" role="dialog" aria-labelledby="about-title" aria-modal="true">
    <div class="about-modal-content">
      <header class="about-modal-header">
        <h2 id="about-title" class="about-title">About Lucinda</h2>
        <button 
          class="close-modal-button"
          type="button"
          aria-label="Close about information"
        >
          Ã—
        </button>
      </header>
      <div class="about-modal-body">
        <p class="about-text">
          Professional illustrator and creative director specializing in editorial design, 
          brand identity, and digital art. Based in London, working with clients worldwide.
        </p>
        <p class="about-text">
          With over a decade of experience in the creative industry, Lucinda brings a unique 
          blend of traditional illustration techniques and contemporary digital design to every project.
        </p>
      </div>
    </div>
  </div>
</div>

<!-- Header functionality script -->
<script>
  class MinimalistHeader {
    constructor() {
      this.menuButton = document.querySelector('.menu-button');
      this.slideHeader = document.querySelector('.slide-header');
      this.aboutButton = document.querySelector('.about-button');
      this.aboutModal = document.querySelector('.about-modal-overlay');
      this.closeModalButton = document.querySelector('.close-modal-button');
      this.isMenuOpen = false;
      this.isModalOpen = false;
      
      this.init();
    }

    init() {
      if (this.menuButton && this.slideHeader) {
        this.menuButton.addEventListener('click', () => this.toggleMenu());
      }

      if (this.aboutButton && this.aboutModal) {
        this.aboutButton.addEventListener('click', () => this.openAboutModal());
      }

      if (this.closeModalButton) {
        this.closeModalButton.addEventListener('click', () => this.closeAboutModal());
      }

      // Close modal on overlay click
      if (this.aboutModal) {
        this.aboutModal.addEventListener('click', (e) => {
          if (e.target === this.aboutModal) {
            this.closeAboutModal();
          }
        });
      }

      // Close modal on escape key
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
          if (this.isModalOpen) {
            this.closeAboutModal();
          } else if (this.isMenuOpen) {
            this.closeMenu();
          }
        }
      });
    }

    toggleMenu() {
      if (this.isMenuOpen) {
        this.closeMenu();
      } else {
        this.openMenu();
      }
    }

    openMenu() {
      this.slideHeader.classList.add('slide-header--open');
      this.menuButton.setAttribute('aria-expanded', 'true');
      this.slideHeader.setAttribute('aria-hidden', 'false');
      this.isMenuOpen = true;
    }

    closeMenu() {
      this.slideHeader.classList.remove('slide-header--open');
      this.menuButton.setAttribute('aria-expanded', 'false');
      this.slideHeader.setAttribute('aria-hidden', 'true');
      this.isMenuOpen = false;
    }

    openAboutModal() {
      this.aboutModal.classList.add('about-modal--open');
      this.aboutModal.setAttribute('aria-hidden', 'false');
      document.body.style.overflow = 'hidden';
      this.isModalOpen = true;
      
      // Close the slide menu when opening modal
      if (this.isMenuOpen) {
        this.closeMenu();
      }

      // Focus trap - focus on close button
      setTimeout(() => {
        this.closeModalButton.focus();
      }, 100);
    }

    closeAboutModal() {
      this.aboutModal.classList.remove('about-modal--open');
      this.aboutModal.setAttribute('aria-hidden', 'true');
      document.body.style.overflow = '';
      this.isModalOpen = false;
    }
  }

  // Initialize header when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => new MinimalistHeader());
  } else {
    new MinimalistHeader();
  }
</script>

<style>
  .header-container {
    position: relative;
    z-index: 1000;
  }

  /* Minimalist MENU button - positioned top-right */
  .menu-button {
    position: fixed;
    top: var(--spacing-lg);
    right: var(--spacing-lg);
    z-index: 1001;
    background: none;
    border: none;
    cursor: pointer;
    padding: var(--spacing-sm);
    font-family: var(--font-alt-heading);
    font-size: var(--text-base);
    font-weight: 400;
    color: var(--color-text-primary);
    letter-spacing: var(--tracking-wider);
    transition: all var(--transition-normal);
  }

  .menu-button:hover {
    color: var(--color-primary);
  }

  .menu-button:focus {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }

  /* Slide-down header - Based on wireframe: 85px for 982px viewport = 8.66vh */
  .slide-header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    height: 8.66vh;
    background-color: rgba(255, 255, 255, 0.98);
    backdrop-filter: blur(10px);
    border-bottom: 1px solid rgba(0, 0, 0, 0.05);
    transform: translateY(-100%);
    transition: transform var(--transition-slow);
    z-index: 1000;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .slide-header--open {
    transform: translateY(0);
  }

  .slide-nav {
    display: flex;
    gap: var(--spacing-2xl);
    align-items: center;
  }

  .nav-button {
    font-family: var(--font-alt-heading);
    font-size: var(--text-lg);
    font-weight: 400;
    letter-spacing: var(--tracking-wider);
    color: var(--color-text-primary);
    text-decoration: none;
    background: none;
    border: none;
    cursor: pointer;
    padding: var(--spacing-md);
    transition: all var(--transition-normal);
    position: relative;
  }

  .nav-button::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    width: 0;
    height: 1px;
    background-color: var(--color-primary);
    transition: all var(--transition-normal);
    transform: translateX(-50%);
  }

  .nav-button:hover {
    color: var(--color-primary);
  }

  .nav-button:hover::after {
    width: 100%;
  }

  .nav-button:focus {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }

  /* About Modal */
  .about-modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(5px);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    visibility: hidden;
    transition: all var(--transition-slow);
    z-index: 1100;
    padding: var(--spacing-lg);
  }

  .about-modal--open {
    opacity: 1;
    visibility: visible;
  }

  .about-modal-content {
    background: var(--color-background);
    width: 70vw; /* Desktop: 70vw */
    max-width: 600px;
    min-height: 50vh;
    border-radius: 2px;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
    transform: scale(0.9) translateY(20px);
    transition: all var(--transition-slow);
    overflow: hidden;
  }

  .about-modal--open .about-modal-content {
    transform: scale(1) translateY(0);
  }

  .about-modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--spacing-lg) var(--spacing-lg) var(--spacing-md);
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  }

  .about-title {
    font-family: var(--font-alt-heading);
    font-size: var(--text-2xl);
    font-weight: 400;
    letter-spacing: var(--tracking-wider);
    color: var(--color-text-primary);
    margin: 0;
  }

  .close-modal-button {
    background: none;
    border: none;
    font-size: var(--text-2xl);
    color: var(--color-text-primary);
    cursor: pointer;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all var(--transition-normal);
  }

  .close-modal-button:hover {
    color: var(--color-primary);
    background-color: rgba(0, 0, 0, 0.05);
    border-radius: 50%;
  }

  .close-modal-button:focus {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }

  .about-modal-body {
    padding: var(--spacing-md) var(--spacing-lg) var(--spacing-lg);
  }

  .about-text {
    font-family: var(--font-alt-heading);
    font-size: var(--text-base);
    font-weight: 300;
    line-height: var(--leading-relaxed);
    color: var(--color-text-primary);
    margin-bottom: var(--spacing-md);
  }

  .about-text:last-child {
    margin-bottom: 0;
  }

  /* Mobile responsive adjustments */
  @media (max-width: 768px) {
    .menu-button {
      top: var(--spacing-md);
      right: var(--spacing-md);
    }

    .slide-nav {
      gap: var(--spacing-lg);
    }

    .nav-button {
      font-size: var(--text-base);
      padding: var(--spacing-sm);
    }

    /* Mobile: 100vw width for about modal */
    .about-modal-content {
      width: 100vw;
      height: 100vh;
      border-radius: 0;
      max-width: none;
      min-height: 100vh;
    }

    .about-modal-overlay {
      padding: 0;
    }

    .about-title {
      font-size: var(--text-xl);
    }
  }

  @media (max-width: 480px) {
    .menu-button {
      top: var(--spacing-sm);
      right: var(--spacing-sm);
      padding: var(--spacing-xs);
    }

    .slide-nav {
      flex-direction: column;
      gap: var(--spacing-md);
    }

    .slide-header {
      height: auto;
      min-height: 8.66vh;
      padding: var(--spacing-md) 0;
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .slide-header {
      background-color: white;
      border-bottom-color: black;
    }

    .about-modal-overlay {
      background-color: rgba(0, 0, 0, 0.95);
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .slide-header,
    .about-modal-overlay,
    .about-modal-content,
    .nav-button,
    .nav-button::after {
      transition: none;
    }
  }
</style>