---
export interface Props {
  modalId: string;
  variant?: 'button' | 'link' | 'text';
  class?: string;
  'aria-label'?: string;
}

const {
  modalId,
  variant = 'button',
  class: className,
  'aria-label': ariaLabel,
} = Astro.props;

const baseClasses = 'modal-trigger focusable';
const variantClasses = {
  button: 'modal-trigger--button',
  link: 'modal-trigger--link',
  text: 'modal-trigger--text'
};
---

<button
  type="button"
  class={`${baseClasses} ${variantClasses[variant]} ${className || ''}`}
  data-modal-trigger={modalId}
  aria-label={ariaLabel}
  aria-haspopup="dialog"
  aria-expanded="false"
>
  <slot />
</button>

<style>
  .modal-trigger {
    cursor: pointer;
    transition: all var(--transition-fast);
    border: none;
    background: transparent;
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
    text-align: inherit;
  }

  .modal-trigger:focus {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }

  /* Button variant */
  .modal-trigger--button {
    background: var(--color-primary);
    color: white;
    padding: var(--spacing-sm) var(--spacing-lg);
    border-radius: 2px;
    font-family: var(--font-alt-heading);
    font-size: var(--text-base);
    font-weight: 400;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: var(--spacing-xs);
  }

  .modal-trigger--button:hover {
    background: var(--color-primary-hover);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(50, 92, 89, 0.3);
  }

  /* Link variant */
  .modal-trigger--link {
    color: var(--color-primary);
    text-decoration: none;
    font-family: var(--font-alt-heading);
    font-weight: 400;
    border-radius: 2px;
    padding: 0.25rem 0.5rem;
    margin: -0.25rem -0.5rem;
  }

  .modal-trigger--link:hover {
    color: var(--color-primary-hover);
    background: rgba(50, 92, 89, 0.05);
    text-decoration: underline;
  }

  /* Text variant */
  .modal-trigger--text {
    color: inherit;
    padding: 0.125rem 0.25rem;
    margin: -0.125rem -0.25rem;
    border-radius: 2px;
  }

  .modal-trigger--text:hover {
    background: rgba(0, 0, 0, 0.05);
    color: var(--color-primary);
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .modal-trigger--button {
      border: 2px solid;
      font-weight: 600;
    }

    .modal-trigger--link {
      text-decoration: underline;
      font-weight: 600;
    }

    .modal-trigger--text {
      border: 1px solid transparent;
    }

    .modal-trigger--text:hover {
      border-color: currentColor;
    }
  }

  /* Reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .modal-trigger {
      transition: none;
    }

    .modal-trigger--button:hover {
      transform: none;
    }
  }

  /* Mobile optimizations */
  @media (max-width: var(--breakpoint-sm)) {
    .modal-trigger--button {
      padding: var(--spacing-md);
      font-size: var(--text-lg);
      min-height: 48px; /* Minimum touch target size */
    }

    .modal-trigger--link,
    .modal-trigger--text {
      min-height: 44px; /* Minimum touch target size */
      display: inline-flex;
      align-items: center;
    }
  }

  /* Dark mode support (if implemented) */
  @media (prefers-color-scheme: dark) {
    .modal-trigger--link:hover,
    .modal-trigger--text:hover {
      background: rgba(255, 255, 255, 0.1);
    }
  }
</style>